name: DockerTest

on:
  workflow_dispatch:
  push:
    branches:
      - master


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Making .env'
        run: |
          touch .env
          echo BOT_TOKEN = ${{ secrets.TEST_BOT_TOKEN }} >> .env
          echo POSTGRES_PASSWORD = ${{ secrets.POSTGRES_PW }} >> .env
          echo POSTGRES_USER =  ${{ secrets.POSTGRES_USR }} >> .env
          echo TEST_CHANNEL_ID = ${{ secrets.TEST_CHANNEL_ID }} >> .env
          echo TEST_USER_ID = ${{ secrets.TEST_USER_ID }} >> .env
      - name: 'Building containers'
        run: docker compose -f CI/Testing.yml build
      - name: Testing
        id: testing
        run: docker compose -f CI/Testing.yml up --abort-on-container-exit
      - name: Report upload
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Report
          path: reports
      - name: Telegram Notification Success
        uses: Dalenir/bumblebee@master
        if: steps.testing.outcome == 'success'
        with:
          bot_token: ${{ secrets.TEST_BOT_TOKEN }}
          chat_id: ${{ secrets.BOT_MASTER_ID }}
          message: '*Тестирование завершено успешно*'
          parse_mode: MarkdownV2
      - name: Telegram Notification Failure
        if: steps.testing.outcome == 'failure'
        uses: Dalenir/bumblebee@master
        with:
          bot_token: ${{ secrets.TEST_BOT_TOKEN }}
          chat_id: ${{ secrets.BOT_MASTER_ID }}
          message: 'Минимум один этап тестирования был провален. Результирующий файл:'
          parse_mode: MarkdownV2
          file_path: reports
      - name: aa
        run:
          echo ${{steps.testing.outcome}}